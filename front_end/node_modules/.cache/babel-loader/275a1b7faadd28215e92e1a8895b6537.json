{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omG\\\\OneDrive\\\\Documents\\\\GitHub\\\\ballot_project\\\\front_end\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Reg from \"./Pages/reg\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Login from \"./Pages/Login\";\nimport Ahomepage from \"./Pages/Ahomepage\";\nimport CreateQuery from \"./Pages/CreateQuery\";\nimport Vote from \"./Components/Vote\";\nimport ForgotPass from \"./Components/ForgotPass\";\nimport { APIProvider } from \"./API/APIProvider\";\nimport { useEffect } from \"react\"; // rafce\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {// getallQuery()\n  }, []); // useEffect(() => {\n  //   const email = localStorage.getItem(\"emailId\")\n  //   const pass = localStorage.getItem(\"password\")\n  //   if (email && pass) {\n  //     console.log(email+\" \"+pass);\n  //   }\n  //   else {\n  //     Navigate(\"/\")\n  //   }\n  // })\n\n  const [optdata, setoptdata] = useState([]);\n  const [checkmate, setcheckmate] = useState(false);\n  var votes = [{\n    id: 1,\n    query: \"What programming language do you like?\",\n    options: {\n      Python: 20,\n      java: 12,\n      Javascript: 22,\n      C: 300,\n      PHP: 20\n    },\n    isUserVoted: false\n  }, {\n    id: 2,\n    query: \"Best IT company to work on?\",\n    options: {\n      Google: 20,\n      Oracle: 12,\n      Microsoft: 22,\n      THBS: 300\n    },\n    isUserVoted: true\n  }, {\n    id: 3,\n    query: \"who is more dangerous\",\n    options: {\n      Lion: 20,\n      Shark: 40,\n      Mosquitoes: 60,\n      snake: 80,\n      Humans: 100\n    },\n    isUserVoted: false\n  }];\n  const [ballot, setBallot] = useState([]);\n  const [loggedIn, setLoggedIn] = useState({\n    emailId: \"\"\n  });\n\n  const addinballot = q => {\n    ballot.map(bal => {\n      if (bal.id === q.id) {\n        setcheckmate(true);\n      }\n    });\n\n    if (!checkmate) {\n      setcheckmate(false);\n      setBallot([...ballot, q]);\n      console.log(ballot);\n    }\n  };\n\n  const getallQuery = async () => {\n    var array = [];\n    console.log(\"getAllQuery called\");\n    var allQuery = await fetch(\"http://localhost:5000/query/getAllquery\").then(resp => resp.json()).then(actualData => {\n      return actualData;\n    });\n    const respQueries = allQuery.data;\n    await respQueries.map(async singleQuery => {\n      var q;\n      const query = singleQuery.queryName;\n      const id = singleQuery.queryId;\n      q = {\n        \"id\": id,\n        \"query\": query\n      };\n      const singlequeryoptions = await fetch(\"http://localhost:5000/options/getalloptions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          queryId: id\n        })\n      }).then(resp => resp.json()).then(async actualData => {\n        let alloptions = [];\n        const opt = await actualData.data.map(async singleoption => {\n          let firstOption = {\n            \"optionId\": singleoption.optionId,\n            \"optionName\": singleoption.options\n          };\n          const voteaddedoption = await fetch(\"http://localhost:5000/users/voteforsingleoption\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              optionId: singleoption.optionId\n            })\n          }).then(resp1 => resp1.json()).then(optiondata => {\n            firstOption = { ...firstOption,\n              \"totalvote\": optiondata.data[0].voteforsingleoption\n            };\n          });\n          alloptions.push(firstOption);\n          return firstOption;\n        });\n        q = { ...q,\n          \"options\": alloptions,\n          \"isUserVoted\": false\n        };\n        array.push(q);\n        return actualData;\n      });\n      return 1;\n    });\n    console.log(array);\n    setBallot(array);\n    console.log(ballot);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/reg\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Reg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/homepage\",\n          element: /*#__PURE__*/_jsxDEV(Ahomepage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/createquery\",\n          element: /*#__PURE__*/_jsxDEV(CreateQuery, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgotpass\",\n          element: /*#__PURE__*/_jsxDEV(ForgotPass, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/allframes\",\n          element: /*#__PURE__*/_jsxDEV(Vote, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iuAxQo1yCttZUIEm2TOP2Hqtp6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/omG/OneDrive/Documents/GitHub/ballot_project/front_end/src/App.js"],"names":["Reg","Routes","Route","Navigate","useState","Login","Ahomepage","CreateQuery","Vote","ForgotPass","APIProvider","useEffect","App","optdata","setoptdata","checkmate","setcheckmate","votes","id","query","options","Python","java","Javascript","C","PHP","isUserVoted","Google","Oracle","Microsoft","THBS","Lion","Shark","Mosquitoes","snake","Humans","ballot","setBallot","loggedIn","setLoggedIn","emailId","addinballot","q","map","bal","console","log","getallQuery","array","allQuery","fetch","then","resp","json","actualData","respQueries","data","singleQuery","queryName","queryId","singlequeryoptions","method","headers","body","JSON","stringify","alloptions","opt","singleoption","firstOption","optionId","voteaddedoption","resp1","optiondata","voteforsingleoption","push"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Reg from \"./Pages/reg\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Login from \"./Pages/Login\";\nimport Ahomepage from \"./Pages/Ahomepage\";\nimport CreateQuery from \"./Pages/CreateQuery\";\nimport Vote from \"./Components/Vote\";\nimport ForgotPass from \"./Components/ForgotPass\";\nimport { APIProvider } from \"./API/APIProvider\";\nimport { useEffect } from \"react\";\n\n// rafce\n\n\nfunction App() {\n  useEffect(() => {\n    // getallQuery()\n  }, [])\n  // useEffect(() => {\n  //   const email = localStorage.getItem(\"emailId\")\n  //   const pass = localStorage.getItem(\"password\")\n  //   if (email && pass) {\n  //     console.log(email+\" \"+pass);\n  //   }\n  //   else {\n  //     Navigate(\"/\")\n  //   }\n  // })\n  const [optdata, setoptdata] = useState([])\n  const [checkmate, setcheckmate] = useState(false)\n  var votes = [\n    {\n      id: 1,\n      query: \"What programming language do you like?\",\n      options: {\n        Python: 20,\n        java: 12,\n        Javascript: 22,\n        C: 300,\n        PHP: 20,\n      },\n      isUserVoted: false,\n    },\n    {\n      id: 2,\n      query: \"Best IT company to work on?\",\n      options: {\n        Google: 20,\n        Oracle: 12,\n        Microsoft: 22,\n        THBS: 300,\n      },\n      isUserVoted: true,\n    },\n    {\n      id: 3,\n      query: \"who is more dangerous\",\n      options: {\n        Lion: 20,\n        Shark: 40,\n        Mosquitoes: 60,\n        snake: 80,\n        Humans: 100,\n      },\n      isUserVoted: false,\n    },\n  ];\n  const [ballot, setBallot] = useState([])\n  const [loggedIn, setLoggedIn] = useState({ emailId: \"\" })\n\n  const addinballot = (q) => {\n    ballot.map((bal) => {\n      if (bal.id === q.id) {\n        setcheckmate(true)\n      }\n    })\n\n    if (!checkmate) {\n      setcheckmate(false)\n      setBallot([...ballot, q])\n      console.log(ballot);\n    }\n  }\n\n  const getallQuery = async () => {\n    var array = [];\n\n    console.log(\"getAllQuery called\");\n    var allQuery = await fetch(\"http://localhost:5000/query/getAllquery\")\n      .then((resp) => resp.json())\n      .then((actualData) => {\n        return actualData\n      })\n\n    const respQueries = allQuery.data;\n\n\n    await respQueries.map(async (singleQuery) => {\n      var q;\n\n      const query = singleQuery.queryName\n      const id = singleQuery.queryId\n      q = { \"id\": id, \"query\": query }\n      const singlequeryoptions = await fetch(\"http://localhost:5000/options/getalloptions\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ queryId: id })\n\n      })\n        .then((resp) => resp.json())\n        .then(async (actualData) => {\n          let alloptions = []\n          const opt = await actualData.data.map(async (singleoption) => {\n            let firstOption = { \"optionId\": singleoption.optionId, \"optionName\": singleoption.options }\n\n            const voteaddedoption = await fetch(\"http://localhost:5000/users/voteforsingleoption\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ optionId: singleoption.optionId })\n            }).then((resp1) => resp1.json())\n              .then((optiondata) => {\n                firstOption = { ...firstOption, \"totalvote\": optiondata.data[0].voteforsingleoption }\n              })\n            alloptions.push(firstOption)\n            return firstOption\n          })\n          q = { ...q, \"options\": alloptions, \"isUserVoted\": false }\n          array.push(q)\n          return actualData\n        })\n\n      return 1;\n    })\n    console.log(array);\n    setBallot(array)\n    console.log(ballot);\n\n  }\n\n  \n  return (\n    <div className=\"background\">\n      <APIProvider>\n        <Routes>\n          <Route path=\"/reg\" exact element={<Reg />} />\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/homepage\" element={<Ahomepage />} />\n          <Route path=\"/createquery\" element={<CreateQuery />} />\n          <Route path=\"/forgotpass\" element={<ForgotPass />} />\n          <Route path=\"/allframes\" element={<Vote />} />\n        </Routes>\n      </APIProvider>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omG\\\\OneDrive\\\\Documents\\\\GitHub\\\\ballot_project\\\\front_end\\\\src\\\\Pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport \"./reg.css\";\nimport Button from \"../UI/Button\";\nimport Nav from \"../Components/nav\";\nimport Upperpart from \"../Components/Upper_part\";\nimport Container from \"@mui/material/Container\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Login = () => {\n  _s();\n\n  const [inputClass, setInputClass] = useState();\n  const [userreg, updateuserreg] = useState({\n    emailId: \"\",\n    password: \"\"\n  });\n  const [logindata, setlogindata] = useState({});\n\n  const handleInput = e => {\n    //checking of imput is here to pe written\n    const name = e.target.name;\n    const value = e.target.value;\n    updateuserreg({ ...userreg,\n      [name]: value\n    });\n  };\n\n  let navigate = useNavigate();\n\n  function req() {\n    navigate(\"/homepage\");\n  }\n\n  const onsubmit = async e => {\n    e.preventDefault(); //validation part is here to be written\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emailId: e.target.emailId.value,\n        password: e.target.password.value\n      })\n    };\n    const response = await fetch('http://localhost:5000/users/login', requestOptions).then(resp => resp.json()).then(actualData => {\n      return actualData;\n    });\n    console.log(response);\n    const respdata = response;\n\n    if (respdata.success === 1) {\n      //storing data in local\n      console.log(respdata.data[0]);\n      const user = {\n        userID: respdata.data[0].userId,\n        emailId: respdata.data[0].emailId,\n        firstName: respdata.data[0].firstname,\n        lastName: respdata.data[0].lastname\n      };\n      console.log(user);\n      localStorage.setItem(\"userID\", respdata.data[0].userId);\n      localStorage.setItem(\"firstname\", respdata.data[0].firstName);\n      localStorage.setItem(\"lastname\", respdata.data[0].lastName);\n      setlogindata(respdata.data[0]);\n      console.log(logindata);\n      if (respdata.data[0].userId == 1) req();else navigate(\"/allframes\");\n    } else {\n      setlogindata(respdata);\n      setInputClass(\"invalid\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"reg lgin\",\n      children: [/*#__PURE__*/_jsxDEV(Upperpart, {\n        top_heading: \"Welcome! Again\",\n        heading: \"Login\",\n        bottom_heading: \"New here?\",\n        link: \"Register account\",\n        href: \"/reg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        onSubmit: onsubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-to-password\",\n          id: \"login_input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            required: true,\n            autoComplete: \"off\",\n            value: userreg.emailId,\n            onChange: handleInput,\n            name: \"emailId\",\n            className: inputClass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            required: true,\n            autoComplete: \"off\",\n            value: userreg.password,\n            onChange: handleInput,\n            name: \"password\",\n            className: inputClass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\",\n              fontSize: \"20px\",\n              display: `${inputClass ? \"block\" : \"none\"}`\n            },\n            children: \"invalid credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgotpass\",\n            id: \"link\",\n            sx: {\n              color: \"#0029FE\",\n              textDecoration: \"none\",\n              fontSize: \"1.5rem\"\n            },\n            children: \"Forget Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"LogIn\",\n          display: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"8XEvuB3YNZWD+MAzFFTZAsUlf1g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/omG/OneDrive/Documents/GitHub/ballot_project/front_end/src/Pages/Login.js"],"names":["Button","Nav","Upperpart","Container","Link","useState","useNavigate","Login","inputClass","setInputClass","userreg","updateuserreg","emailId","password","logindata","setlogindata","handleInput","e","name","target","value","navigate","req","onsubmit","preventDefault","requestOptions","method","headers","body","JSON","stringify","response","fetch","then","resp","json","actualData","console","log","respdata","success","data","user","userID","userId","firstName","firstname","lastName","lastname","localStorage","setItem","color","fontSize","display","textDecoration"],"mappings":"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","sourcesContent":["import \"./reg.css\";\nimport Button from \"../UI/Button\";\nimport Nav from \"../Components/nav\";\nimport Upperpart from \"../Components/Upper_part\";\nimport Container from \"@mui/material/Container\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nvar Login = () => {\n\n  const [inputClass, setInputClass] = useState()\n  const [userreg, updateuserreg] = useState({\n    emailId: \"\",\n    password: \"\",\n  });\n  const [logindata, setlogindata] = useState({})\n\n\n  const handleInput = (e) => {\n    //checking of imput is here to pe written\n    const name = e.target.name;\n    const value = e.target.value;\n    updateuserreg({ ...userreg, [name]: value });\n  };\n  let navigate = useNavigate();\n  function req() {\n    navigate(\"/homepage\");\n  }\n\n  const onsubmit = async (e) => {\n    e.preventDefault();\n    //validation part is here to be written\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ emailId: e.target.emailId.value, password: e.target.password.value })\n    }\n\n\n    const response = await fetch('http://localhost:5000/users/login', requestOptions)\n      .then((resp) => resp.json())\n      .then((actualData) => {\n        return actualData\n      })\n\n      console.log(response);\n    const respdata = response\n    \n\n\n\n\n    if (respdata.success === 1) {\n\n      //storing data in local\n      console.log(respdata.data[0]);\n      const user = {userID : respdata.data[0].userId , emailId: respdata.data[0].emailId,\n        firstName : respdata.data[0].firstname , lastName: respdata.data[0].lastname}\n        console.log(user);\n      localStorage.setItem(\"userID\" , respdata.data[0].userId);\n      localStorage.setItem(\"firstname\" , respdata.data[0].firstName);\n      localStorage.setItem(\"lastname\" , respdata.data[0].lastName);\n    \n      \n      setlogindata(respdata.data[0])\n      console.log(logindata);\n      if (respdata.data[0].userId == 1)\n        req();\n      else\n        navigate(\"/allframes\");\n    }\n    else {\n      setlogindata(respdata)\n      setInputClass(\"invalid\")\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <Nav />\n      <Container className=\"reg lgin\">\n        <Upperpart top_heading=\"Welcome! Again\" heading=\"Login\" bottom_heading=\"New here?\" link=\"Register account\" href=\"/reg\" />\n        <form action=\"#\" onSubmit={onsubmit}>\n          <div className=\"email-to-password\" id=\"login_input\">\n            <input type=\"email\" placeholder=\"Email\" required autoComplete=\"off\" value={userreg.emailId} onChange={handleInput} name=\"emailId\" className={inputClass} />\n\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              autoComplete=\"off\"\n              value={userreg.password}\n              onChange={handleInput}\n              name=\"password\"\n              className={inputClass}\n            />\n            <p style={{ color: \"red\", fontSize: \"20px\", display: `${inputClass ? \"block\" : \"none\"}` }} >invalid credentials</p>\n            <Link to=\"/forgotpass\" id=\"link\" sx={{ color: \"#0029FE\", textDecoration: \"none\", fontSize: \"1.5rem\" }}>\n              Forget Password?\n            </Link>\n          </div>\n          <Button text=\"LogIn\" display=\"none\" />\n        </form>\n      </Container>\n    </>\n  );\n};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
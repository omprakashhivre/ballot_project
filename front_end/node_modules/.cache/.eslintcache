[{"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\index.js":"1","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\App.js":"2","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ForgotPass.js":"3","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Vote.js":"4","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Login.js":"5","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\CreateQuery.js":"6","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\reg.js":"7","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Ahomepage.js":"8","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\API\\APIProvider.js":"9","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\nav.js":"10","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Upper_part.js":"11","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\LoadingSpinner.js":"12","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\UI\\Button.js":"13","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ResetPass.js":"14","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Frame.js":"15"},{"size":266,"mtime":1653383563018,"results":"16","hashOfConfig":"17"},{"size":4206,"mtime":1653384132702,"results":"18","hashOfConfig":"17"},{"size":4049,"mtime":1653384521553,"results":"19","hashOfConfig":"17"},{"size":4630,"mtime":1653384567386,"results":"20","hashOfConfig":"17"},{"size":3363,"mtime":1653384118295,"results":"21","hashOfConfig":"17"},{"size":4656,"mtime":1653384115415,"results":"22","hashOfConfig":"17"},{"size":3760,"mtime":1653384126021,"results":"23","hashOfConfig":"17"},{"size":6150,"mtime":1653461097744,"results":"24","hashOfConfig":"17"},{"size":3880,"mtime":1653384159657,"results":"25","hashOfConfig":"17"},{"size":1334,"mtime":1653384559297,"results":"26","hashOfConfig":"17"},{"size":1228,"mtime":1653384574546,"results":"27","hashOfConfig":"17"},{"size":216,"mtime":1653384532652,"results":"28","hashOfConfig":"17"},{"size":374,"mtime":1653384151238,"results":"29","hashOfConfig":"17"},{"size":1801,"mtime":1653384548463,"results":"30","hashOfConfig":"17"},{"size":3945,"mtime":1653384583457,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yb96t1",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\index.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\App.js",["82","83","84","85","86","87","88","89","90","91","92","93"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ForgotPass.js",["94"],[],"import emailjs from \"emailjs-com\";\nimport { ResetPass } from \"./ResetPass.js\";\nimport \"../Pages/reg\";\n// import Button from \"../UI/Button\";\nimport Nav from \"./nav\";\nimport Upperpart from \"./Upper_part\";\nimport Container from \"@mui/material/Container\";\n// import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"../UI/Button.css\";\n// import {  useNavigate } from \"react-router-dom\";\n\nvar ForgotPass = () => {\n  const [otpsends, setotpsends] = useState(false);\n  const [verifyotp, setverifyotp] = useState(false);\n  const [otp, setotp] = useState(0);\n  const [emailId, setemailId] = useState(\"\");\n\n  const [userreg, updateuserreg] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const handleInput = (e) => {\n    //checking of imput is here to pe written\n    const name = e.target.name;\n    const value = e.target.value;\n    updateuserreg({ ...userreg, [name]: value });\n  };\n  // let navigate = useNavigate();\n  // function req() {\n  //   navigate(\"/\");\n  // }\n  // const onsubmit = (e) => {\n  //   e.preventDefault();\n  //   //validation part is here to be written\n  //   updateuserreg({ email: \"\", password: \"\" });\n  //   console.log(userreg);\n  //   //req();\n  // };\n  const sendOtp = (givenemail) => {\n    const newotp = Math.floor(Math.random() * 1000000);\n    setotp(newotp);\n    setemailId(givenemail)\n    console.log(otp + \" == \" + newotp + \" \" + givenemail);\n    try {\n      emailjs\n        .send(\n          \"service_ukgndsq\",\n          \"template_k8qpx17\",\n          {\n            message: newotp,\n            to_email: givenemail,\n          },\n          \"user_NDtOXp78ookGeIZN8R3ie\"\n        )\n        .then(function (res) {\n          console.log(\"status \" + res.status);\n          alert(\"OTP send\");\n          setotpsends(true);\n          document.getElementById(\"otpbutton\").style.display = \"none\";\n        });\n    } catch (error) {\n      alert(\"not able to send OTP check email and try again \", error);\n    }\n  };\n\n  const verifyOtp = (otpgot) => {\n    if (otp == otpgot) {\n      alert(otp + \" -- >otp matches\");\n      setverifyotp(true);\n    } else alert(\"invalid otp\");\n  };\n  return (\n    <>\n      <Nav />\n      <Container className=\"reg lgin\">\n        <Upperpart top_heading=\"\" heading=\"Forgot Password\" bottom_heading=\"Enter Registered mail /\" link=\"Create account\" href=\"/reg\" />\n        <>\n          <div className=\"email-to-password\" id=\"login_input\">\n            <div style={{ display: \"flex\", flexDirection: \"column\" }} id=\"\">\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                autoComplete=\"off\"\n                value={userreg.email}\n                onChange={handleInput}\n                name=\"email\"\n                style={{ width: \"auto\", marginBottom: \"20px\" }}\n                id=\"givenemail\"\n              />\n              <button className=\"reg_submit\" onClick={() => sendOtp(document.getElementById(\"givenemail\").value)} id=\"otpbutton\">\n                Send Otp\n              </button>\n            </div>\n            {otpsends ? (\n              <>\n                {verifyotp ? (\n                  <ResetPass  emailId = {emailId} />\n                ) : (\n                  <div style={{ display: \"flex\", flexDirection: \"column\" }} id=\"otpbox\">\n                    <input\n                      type=\"number\"\n                      placeholder=\"Enter otp\"\n                      required\n                      autoComplete=\"off\"\n                      onChange={handleInput}\n                      name=\"otp\"\n                      id=\"enteredotp\"\n                      style={{ marginRight: \"20px\" }}\n                    />\n                    <button className=\"reg_submit\" onClick={() => verifyOtp(document.getElementById(\"enteredotp\").value)}>\n                      Verify OTP\n                    </button>\n                  </div>\n                )}{\" \"}\n              </>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </>\n      </Container>\n    </>\n  );\n};\nexport default ForgotPass;\n",["95","96"],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Vote.js",["97","98","99","100","101","102","103","104","105"],[],"import Nav from \"./nav\";\nimport React from 'react'\nimport { Frame } from './Frame'\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react'\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst Vote = () => {\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem(\"userID\")) {\n      if (localStorage.getItem(\"userID\") == 1) {\n        console.log(\"admin logged\");\n        navigate(\"/homepage\")\n      }\n      else if (localStorage.getItem(\"userID\") > 1)\n        console.log(\"user logged\");\n      getallQuery()\n    }\n    else\n      navigate(\"/\")\n\n\n\n\n  }, [])\n\n  const local_userId = localStorage.getItem(\"userID\")\n  const [data, setData] = useState([])\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getallQuery = async () => {\n    setIsLoading(true)\n\n    var array = [];\n\n    const idlist = await fetch(\"http://localhost:5000/vote/getidlist\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ userId: local_userId })\n    }).then((resp1) => resp1.json())\n      .then((idlist1) => idlist1)\n\n    // console.log(idlist.data);\n\n\n    console.log(\"getAllQuery called\");\n    var allQuery = await fetch(\"http://localhost:5000/query/getfilteredquery\")\n      .then((resp) => resp.json())\n      .then((actualData) => {\n        return actualData\n      })\n\n    const respQueries = allQuery.data;\n\n\n    await respQueries.map(async (singleQuery) => {\n      var q;\n\n      const query = singleQuery.queryName\n      const id = singleQuery.queryId\n      q = { \"id\": id, \"query\": query, \"startDate\": singleQuery.querystartdate, \"endDate\": singleQuery.queryenddate }\n\n\n      const singlequeryoptions = await fetch(\"http://localhost:5000/options/getalloptions\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ queryId: id })\n\n      })\n        .then((resp) => resp.json())\n        .then(async (actualData) => {\n          let alloptions = []\n          const opt = await actualData.data.map(async (singleoption) => {\n            let firstOption = { \"optionId\": singleoption.optionId, \"optionName\": singleoption.options, \"querystartdate\": singleoption.querystartdate, \"queryenddate\": singleoption.queryenddate }\n\n            const voteaddedoption = await fetch(\"http://localhost:5000/users/voteforsingleoption\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ optionId: singleoption.optionId })\n            }).then((resp1) => resp1.json())\n              .then((optiondata) => {\n                firstOption = { ...firstOption, \"totalvote\": optiondata.data[0].voteforsingleoption }\n              })\n            alloptions.push(firstOption)\n            return firstOption\n          })\n\n          let isvoted = false;\n          idlist.data.map((id) => id.queryId == q.id ? isvoted = true : {})\n          q = { ...q, \"options\": alloptions, \"isUserVoted\": isvoted }\n          array.push(q)\n\n          return actualData\n        })\n      array.sort((a, b) => new Date(a.startDate) < new Date(b.startDate) ? 1 : -1)\n      return 1;\n    })\n    setTimeout(() => {\n      setIsLoading(false)\n      setData(array)\n\n\n    }, 1500)\n    console.log(array)\n\n\n  }\n\n\n  const setVote = (qid, optionId) => {\n    const itm = localStorage.getItem(\"user\")\n    // console.log(itm);\n    alert(\"query id \" + qid + \" optionId \" + optionId);\n    setData(data.map((vote) => (vote.id === qid ? { ...vote, options: vote.options.map((opt) => opt.optionId == optionId ? { ...opt, totalvote: opt.totalvote + 1 } : opt), isUserVoted: true } : vote)));\n    // console.log(data);\n    fetch(\"http://localhost:5000/vote/castvote\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ queryId: qid, optionId: optionId, userId: local_userId })\n    })\n  }\n\n  return (\n    <>\n      <Nav logedin=\"\" firstName={localStorage.getItem(\"firstname\") || \"xx\"} lastName={localStorage.getItem(\"lastname\") || \"xx\"} />\n\n\n      {\n        isLoading ? <LoadingSpinner /> :\n          <>\n            {\n              data.length > 0 ?\n                data.map((vote, index) => {\n                  if (new Date(vote.endDate) > new Date())\n                    return <Frame key={vote.id} index={index} vote={vote} setVote={setVote} />\n\n                }\n                ) : <h2 style={{ color: \"red\", textAlign: \"center\", marginTop: \"5rem\" }}>currently no active ballots for vote...</h2>\n            }\n          </>\n\n      }\n\n\n    </>\n  )\n}\n\nexport default Vote\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Login.js",["106"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\CreateQuery.js",["107","108","109","110"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\reg.js",["111"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Ahomepage.js",["112","113","114","115","116"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\API\\APIProvider.js",["117","118","119","120","121"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\nav.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Upper_part.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\LoadingSpinner.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\UI\\Button.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ResetPass.js",["122","123"],[],"import { red } from \"@mui/material/colors\";\nimport { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport '../Pages/reg.css'\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport const ResetPass = ({emailId}) => {\n  let navigate = useNavigate();\n  console.log(emailId);\n  const [invalid,setInvalid] = useState();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const pass = e.target.password.value\n    const cpass = e.target.cpassword.value\n\n    if(pass == cpass){\n    const requestOptions = {\n      method: \"put\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ emailId: emailId , password: e.target.password.value })\n    }\n\n      const response = await fetch('http://localhost:5000/users/updatepassword', requestOptions)\n        .then((resp) => resp.json())\n        .then((actualData) => {\n          return actualData\n        })\n\n      const respdata = response\n      console.log(respdata); \n      if (respdata.success === 1) {\n        alert(emailId + \" password updated succesfully\")\n        setTimeout(function() {\n          navigate(\"/\");\n      \n      }, 500)\n      }\n      else {\n        alert(\"email not updated\")\n        setInvalid('invalid')\n      }\n    }\n    else\n        setInvalid('invalid')\n\n  }\n\n  return (\n    \n    <div>\n    <form action=\"#\" onSubmit={onSubmit}>\n        <input type=\"text\" placeholder=\"Password\" required autoComplete=\"off\"  name=\"password\" className={invalid} />\n        <input type=\"password\" placeholder=\"Confirm Password\" required autoComplete=\"off\" name=\"cpassword\"  className={invalid}/>\n        <p style={{color:\"red\",fontSize:\"20px\",display:`${invalid ? \"block\" : \"none\"}`}}>something goes wrong</p>\n        <Button text=\"Update Password\">Update Password</Button>\n    </form>\n    </div>\n  )\n}\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Frame.js",["124","125","126","127","128"],[],"import \"./framestyle.css\";\nimport \"../Pages/Ahomepage.css\";\nimport Container from \"@mui/material/Container\";\nimport {useState} from 'react'\nexport const Frame = ({ vote, setVote, index }) => {\n\n  const [timer,setTimer] = useState('')\n\n\n  const options = vote.options\n  var sum = 0\n  options.map((op) => sum = sum + op.totalvote)\n\n\n  const enddate = new Date(vote.endDate);\n\n  if(!vote.isUserVoted)\n  var interval = setInterval(() => {\n    const currentDate = new Date();\n  var delta = Math.abs(enddate - currentDate) / 1000;\n\n  // calculate (and subtract) whole days\n  var days = Math.floor(delta / 86400);\n  delta -= days * 86400;\n\n  // calculate (and subtract) whole hours\n  var hours = Math.floor(delta / 3600) % 24;\n  delta -= hours * 3600;\n\n  // calculate (and subtract) whole minutes\n  var minutes = Math.floor(delta / 60) % 60;\n  delta -= minutes * 60;\n\n  // what's left is seconds\n  var seconds = delta % 60;\n\n  setTimer(days + \"D \" + hours + \"H \" + minutes + \"M \" + seconds.toFixed(0))\n  },1000)\n  \n\n  return (\n    <Container className=\"single-frame Ahomepage_form inner_form\">\n      {\n        vote.isUserVoted ? \"\" :\n        <h4 style={{ color: \"red\", textAlign: \"center\", marginTop: \"5rem\", fontFamily: \"Poppins\", fontWeight: \"bold\", textAlign: \"right\", marginTop: \"0%\" }}>Time left : {timer}</h4>\n      }\n\n      <h3 className=\"frame-query\">{vote.query}</h3>\n      {\n        options.map((opt, index) => {\n\n\n          return (\n            <>\n              <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"\", padding: \"0%\" }}>\n                {vote.isUserVoted ? (\n                  <>\n                    <h5 className=\"frame-query\" style={{ fontSize: \"24px\", marginRight: \"40px\" }}>\n                      {sum != 0 ? ((opt.totalvote / sum) * 100).toFixed(0) : 0}%\n                    </h5>\n                  </>\n                ) : (\n                  <input type=\"radio\" name=\"inputoption\" value={opt.optionId} style={{ color: \"blue\", width: \"30px\", height: \"50px\", marginRight: \"30px\" }} />\n                )}\n\n                <h3 className=\"frame-query\" style={{ fontSize: \"32px\" }}>\n                  {opt.optionName}{\" \"}\n                </h3>\n                <br></br>\n              </div>\n              {vote.isUserVoted ? (\n                <>\n                  <div className=\"progress p_inline_bar\">\n                    <div\n                      className=\"progress-bar inline-progress-bar\"\n                      role=\"progressbar\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      style={{ width: `${sum != 0 ? ((opt.totalvote / sum) * 100).toFixed(0) : 0}%` }}\n                    ></div>\n                  </div>\n                  {/* <div id=\"progress\">\n                  <div id=\"progress-bar\" style={{ width: `${((opt[1] / sum) * 100).toFixed(1)}%` }}></div>\n                </div> */}\n                </>\n              ) : (\n                \"\"\n              )}\n            </>\n          );\n        })\n      }\n      <div style={{ display: \"flex\", displayDirection: \"row\" }}>\n        <p className=\"total-votes\">Total votes: {sum}</p>\n        {\n          vote.isUserVoted ? <p style={{ float: \"right\", marginLeft: \"max\", color: \"red\", fontSize: \"medium\" }}>already voted</p>\n            :\n            <>\n              {/* <p style={{display:\"inline-grid\",color:\"red\",fontSize:\"20px\"}}> query end on :  {vote.endDate}</p> */}\n              <button className=\"button-btn \" style={{ float: \"right\", marginLeft: \"30%\" }} onClick={() => {\n                try {\n                  const choosedoption = document.querySelector('input[name=\"inputoption\"]:checked').value\n                  setVote(vote.id, choosedoption)\n                } catch (error) {\n                  alert(\"please choose any option to proceed - \" + error)\n                }\n\n              }\n              }>Vote</button>\n            </>\n        }\n      </div>\n    </Container >\n  );\n};\n",{"ruleId":"129","severity":1,"message":"130","line":3,"column":25,"nodeType":"131","messageId":"132","endLine":3,"endColumn":33},{"ruleId":"129","severity":1,"message":"133","line":30,"column":10,"nodeType":"131","messageId":"132","endLine":30,"endColumn":17},{"ruleId":"129","severity":1,"message":"134","line":30,"column":19,"nodeType":"131","messageId":"132","endLine":30,"endColumn":29},{"ruleId":"129","severity":1,"message":"135","line":32,"column":7,"nodeType":"131","messageId":"132","endLine":32,"endColumn":12},{"ruleId":"129","severity":1,"message":"136","line":70,"column":10,"nodeType":"131","messageId":"132","endLine":70,"endColumn":18},{"ruleId":"129","severity":1,"message":"137","line":70,"column":20,"nodeType":"131","messageId":"132","endLine":70,"endColumn":31},{"ruleId":"129","severity":1,"message":"138","line":72,"column":9,"nodeType":"131","messageId":"132","endLine":72,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":73,"column":22,"nodeType":"141","messageId":"142","endLine":73,"endColumn":24},{"ruleId":"129","severity":1,"message":"143","line":86,"column":9,"nodeType":"131","messageId":"132","endLine":86,"endColumn":20},{"ruleId":"129","severity":1,"message":"144","line":105,"column":13,"nodeType":"131","messageId":"132","endLine":105,"endColumn":31},{"ruleId":"129","severity":1,"message":"145","line":114,"column":17,"nodeType":"131","messageId":"132","endLine":114,"endColumn":20},{"ruleId":"129","severity":1,"message":"146","line":117,"column":19,"nodeType":"131","messageId":"132","endLine":117,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":68,"column":13,"nodeType":"149","messageId":"150","endLine":68,"endColumn":15},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"147","severity":1,"message":"148","line":13,"column":42,"nodeType":"149","messageId":"150","endLine":13,"endColumn":44},{"ruleId":"155","severity":1,"message":"156","line":27,"column":6,"nodeType":"157","endLine":27,"endColumn":8,"suggestions":"158"},{"ruleId":"129","severity":1,"message":"144","line":66,"column":13,"nodeType":"131","messageId":"132","endLine":66,"endColumn":31},{"ruleId":"129","severity":1,"message":"145","line":75,"column":17,"nodeType":"131","messageId":"132","endLine":75,"endColumn":20},{"ruleId":"129","severity":1,"message":"146","line":78,"column":19,"nodeType":"131","messageId":"132","endLine":78,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":91,"column":46,"nodeType":"149","messageId":"150","endLine":91,"endColumn":48},{"ruleId":"129","severity":1,"message":"159","line":113,"column":11,"nodeType":"131","messageId":"132","endLine":113,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":116,"column":110,"nodeType":"149","messageId":"150","endLine":116,"endColumn":112},{"ruleId":"139","severity":1,"message":"160","line":135,"column":40,"nodeType":"141","messageId":"161","endLine":135,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":68,"column":35,"nodeType":"149","messageId":"150","endLine":68,"endColumn":37},{"ruleId":"129","severity":1,"message":"162","line":13,"column":10,"nodeType":"131","messageId":"132","endLine":13,"endColumn":15},{"ruleId":"129","severity":1,"message":"163","line":13,"column":17,"nodeType":"131","messageId":"132","endLine":13,"endColumn":25},{"ruleId":"129","severity":1,"message":"164","line":86,"column":13,"nodeType":"131","messageId":"132","endLine":86,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":89,"column":39,"nodeType":"141","messageId":"142","endLine":89,"endColumn":41},{"ruleId":"147","severity":1,"message":"148","line":50,"column":26,"nodeType":"149","messageId":"150","endLine":50,"endColumn":28},{"ruleId":"129","severity":1,"message":"165","line":14,"column":10,"nodeType":"131","messageId":"132","endLine":14,"endColumn":17},{"ruleId":"129","severity":1,"message":"166","line":18,"column":19,"nodeType":"131","messageId":"132","endLine":18,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":21,"column":40,"nodeType":"149","messageId":"150","endLine":21,"endColumn":42},{"ruleId":"139","severity":1,"message":"167","line":48,"column":35,"nodeType":"141","messageId":"161","endLine":48,"endColumn":37},{"ruleId":"147","severity":1,"message":"168","line":48,"column":50,"nodeType":"149","messageId":"150","endLine":48,"endColumn":52},{"ruleId":"155","severity":1,"message":"169","line":12,"column":5,"nodeType":"157","endLine":12,"endColumn":7,"suggestions":"170"},{"ruleId":"129","severity":1,"message":"144","line":76,"column":13,"nodeType":"131","messageId":"132","endLine":76,"endColumn":31},{"ruleId":"129","severity":1,"message":"145","line":85,"column":17,"nodeType":"131","messageId":"132","endLine":85,"endColumn":20},{"ruleId":"129","severity":1,"message":"146","line":88,"column":19,"nodeType":"131","messageId":"132","endLine":88,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":101,"column":46,"nodeType":"149","messageId":"150","endLine":101,"endColumn":48},{"ruleId":"129","severity":1,"message":"171","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":18,"column":13,"nodeType":"149","messageId":"150","endLine":18,"endColumn":15},{"ruleId":"129","severity":1,"message":"172","line":18,"column":7,"nodeType":"131","messageId":"132","endLine":18,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":45,"column":119,"nodeType":"175","messageId":"150","endLine":45,"endColumn":128},{"ruleId":"173","severity":1,"message":"176","line":45,"column":139,"nodeType":"175","messageId":"150","endLine":45,"endColumn":148},{"ruleId":"147","severity":1,"message":"168","line":59,"column":28,"nodeType":"149","messageId":"150","endLine":59,"endColumn":30},{"ruleId":"147","severity":1,"message":"168","line":79,"column":46,"nodeType":"149","messageId":"150","endLine":79,"endColumn":48},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'optdata' is assigned a value but never used.","'setoptdata' is assigned a value but never used.","'votes' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'addinballot' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getallQuery' is assigned a value but never used.","'singlequeryoptions' is assigned a value but never used.","'opt' is assigned a value but never used.","'voteaddedoption' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getallQuery' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["179"],"'itm' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'queryId' is assigned a value but never used.","'confirm' is defined but never used.","'setLoading' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'getallQuery'. Either include it or remove the dependency array.",["180"],"'red' is defined but never used.","'interval' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","Duplicate key 'marginTop'.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [getallQuery, navigate]",{"range":"185","text":"186"},"Update the dependencies array to be: [getallQuery]",{"range":"187","text":"188"},[637,639],"[getallQuery, navigate]",[301,303],"[getallQuery]"]
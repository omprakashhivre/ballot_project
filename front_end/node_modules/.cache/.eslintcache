[{"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\index.js":"1","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\App.js":"2","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ForgotPass.js":"3","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Vote.js":"4","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Login.js":"5","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\CreateQuery.js":"6","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\reg.js":"7","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Ahomepage.js":"8","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\API\\APIProvider.js":"9","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\nav.js":"10","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Upper_part.js":"11","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\LoadingSpinner.js":"12","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\UI\\Button.js":"13","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ResetPass.js":"14","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Frame.js":"15","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Pagination.js":"16","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Overlay.js":"17"},{"size":266,"mtime":1653383563018,"results":"18","hashOfConfig":"19"},{"size":3574,"mtime":1654053547054,"results":"20","hashOfConfig":"19"},{"size":5382,"mtime":1654454171128,"results":"21","hashOfConfig":"19"},{"size":5917,"mtime":1655022606033,"results":"22","hashOfConfig":"19"},{"size":3205,"mtime":1654516808649,"results":"23","hashOfConfig":"19"},{"size":4826,"mtime":1655056659025,"results":"24","hashOfConfig":"19"},{"size":5413,"mtime":1655054173931,"results":"25","hashOfConfig":"19"},{"size":11192,"mtime":1655054612178,"results":"26","hashOfConfig":"19"},{"size":2351,"mtime":1654052756314,"results":"27","hashOfConfig":"19"},{"size":1729,"mtime":1654444013660,"results":"28","hashOfConfig":"19"},{"size":1228,"mtime":1653384574546,"results":"29","hashOfConfig":"19"},{"size":216,"mtime":1653384532652,"results":"30","hashOfConfig":"19"},{"size":374,"mtime":1653384151238,"results":"31","hashOfConfig":"19"},{"size":2633,"mtime":1654454301208,"results":"32","hashOfConfig":"19"},{"size":4170,"mtime":1654686881221,"results":"33","hashOfConfig":"19"},{"size":3468,"mtime":1654074806191,"results":"34","hashOfConfig":"19"},{"size":737,"mtime":1654505036351,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"yb96t1",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"39"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\index.js",[],[],["93","94"],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\App.js",["95","96","97","98","99","100","101","102","103","104","105","106"],[],"import \"./App.css\";\nimport Reg from \"./Pages/reg\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Login from \"./Pages/Login\";\nimport Ahomepage from \"./Pages/Ahomepage\";\nimport CreateQuery from \"./Pages/CreateQuery\";\nimport Vote from \"./Components/Vote\";\nimport ForgotPass from \"./Components/ForgotPass\";\n// import { APIProvider } from \"./API/APIProvider\";\nimport { useEffect } from \"react\";\n\n// rafce\n\n\nfunction App() {\n  useEffect(() => {\n    // getallQuery()\n  }, [])\n  // useEffect(() => {\n  //   const email = localStorage.getItem(\"emailId\")\n  //   const pass = localStorage.getItem(\"password\")\n  //   if (email && pass) {\n  //     console.log(email+\" \"+pass);\n  //   }\n  //   else {\n  //     Navigate(\"/\")\n  //   }\n  // })\n  const [optdata, setoptdata] = useState([])\n  const [checkmate, setcheckmate] = useState(false)\n  var votes = [];\n  const [ballot, setBallot] = useState([])\n  const [loggedIn, setLoggedIn] = useState({ emailId: \"\" })\n\n  const addinballot = (q) => {\n    ballot.map((bal) => {\n      if (bal.id === q.id) {\n        setcheckmate(true)\n      }\n    })\n\n    if (!checkmate) {\n      setcheckmate(false)\n      setBallot([...ballot, q])\n      console.log(ballot);\n    }\n  }\n\n  const getallQuery = async () => {\n    var array = [];\n\n    console.log(\"getAllQuery called\");\n    var allQuery = await fetch(\"http://localhost:5000/query/getAllquery\")\n      .then((resp) => resp.json())\n      .then((actualData) => {\n        return actualData\n      })\n\n    const respQueries = allQuery.data;\n\n\n    await respQueries.map(async (singleQuery) => {\n      var q;\n\n      const query = singleQuery.queryName\n      const id = singleQuery.queryId\n      q = { \"id\": id, \"query\": query }\n      const singlequeryoptions = await fetch(\"http://localhost:5000/options/getalloptions\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ queryId: id })\n\n      })\n        .then((resp) => resp.json())\n        .then(async (actualData) => {\n          let alloptions = []\n          const opt = await actualData.data.map(async (singleoption) => {\n            let firstOption = { \"optionId\": singleoption.optionId, \"optionName\": singleoption.options }\n\n            const voteaddedoption = await fetch(\"http://localhost:5000/users/voteforsingleoption\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ optionId: singleoption.optionId })\n            }).then((resp1) => resp1.json())\n              .then((optiondata) => {\n                firstOption = { ...firstOption, \"totalvote\": optiondata.data[0].voteforsingleoption }\n              })\n            alloptions.push(firstOption)\n            return firstOption\n          })\n          q = { ...q, \"options\": alloptions, \"isUserVoted\": false }\n          array.push(q)\n          return actualData\n        })\n\n      return 1;\n    })\n    console.log(array);\n    setBallot(array)\n    console.log(ballot);\n\n  }\n\n  \n  return (\n    <div className=\"background\">\n      {/* <APIProvider> */}\n        <Routes>\n          <Route path=\"/reg\" exact element={<Reg />} />\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/homepage\" element={<Ahomepage />} />\n          <Route path=\"/createquery\" element={<CreateQuery />} />\n          <Route path=\"/forgotpass\" element={<ForgotPass />} />\n          <Route path=\"/allframes\" element={<Vote />} />\n        </Routes>\n      {/* </APIProvider> */}\n    </div>\n  );\n\n}\n\nexport default App;\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ForgotPass.js",["107"],[],"import emailjs from \"emailjs-com\";\nimport { ResetPass } from \"./ResetPass.js\";\nimport \"../Pages/reg\";\n// import Button from \"../UI/Button\";\nimport Nav from \"./nav\";\nimport Upperpart from \"./Upper_part\";\nimport Container from \"@mui/material/Container\";\n// import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"../UI/Button.css\";\n// import {  useNavigate } from \"react-router-dom\";\n//toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar ForgotPass = () => {\n  const [otpsends, setotpsends] = useState(false);\n  const [verifyotp, setverifyotp] = useState(false);\n  const [otp, setotp] = useState(0);\n  const [emailId, setemailId] = useState(\"\");\n\n  const [userreg, updateuserreg] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const handleInput = (e) => {\n    //checking of imput is here to pe written\n    const name = e.target.name;\n    const value = e.target.value;\n    updateuserreg({ ...userreg, [name]: value });\n  };\n  \n  const sendOtp = async (givenemail) => {\n    const newotp = Math.floor(Math.random() * 1000000);\n    setotp(newotp);\n    setemailId(givenemail)\n    console.log(otp + \" == \" + newotp + \" \" + givenemail);\n    try {\n      const user = await  fetch(\"http://localhost:5000/users/log?email=\"+givenemail)\n          .then((response) => response.json())\n          .catch(xy => console.log(xy))\n          console.log(user);\n          if(user.id == null)\n            throw new Error(\"email not rergistered. Kindly Register...\");\n\n\n      emailjs\n        .send(\n          \"service_ukgndsq\",\n          \"template_k8qpx17\",\n          {\n            message: newotp,\n            to_email: givenemail,\n          },\n          \"user_NDtOXp78ookGeIZN8R3ie\"\n        )\n        .then(function (res) {\n          console.log(\"status \" + res.status);\n          toast.success('OTP send successfully on email -  '+givenemail, {\n            position: \"bottom-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          })\n          setotpsends(true);\n          document.getElementById(\"otpbutton\").style.display = \"none\";\n        });\n    } catch (error) {\n      toast.warn('not able to send OTP Because, '+ error, {\n        position: \"bottom-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    }\n  };\n\n  const verifyOtp = (otpgot) => {\n    if (otp == otpgot) {\n      // toast.success('Otp Matches please ', {\n      //   position: \"bottom-right\",\n      //   autoClose: 2000,\n      //   hideProgressBar: false,\n      //   closeOnClick: true,\n      //   pauseOnHover: true,\n      //   draggable: true,\n      //   progress: undefined,\n      // })\n      setverifyotp(true);\n    } else toast.warn('Unable to update Password', {\n      position: \"bottom-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    })\n  };\n  return (\n    <>\n      <Nav />\n      <Container className=\"reg lgin\">\n        <Upperpart top_heading=\"\" heading=\"Forgot Password\" bottom_heading=\"Enter Registered mail /\" link=\"Create account\" href=\"/reg\" />\n        <>\n          <div className=\"email-to-password\" id=\"login_input\">\n            <div style={{ display: \"flex\", flexDirection: \"column\" }} id=\"\">\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                autoComplete=\"off\"\n                value={userreg.email}\n                onChange={handleInput}\n                name=\"email\"\n                style={{ width: \"auto\", marginBottom: \"20px\" }}\n                id=\"givenemail\"\n              />\n              <button className=\"reg_submit\" onClick={() => sendOtp(document.getElementById(\"givenemail\").value)} id=\"otpbutton\">\n                Send Otp\n              </button>\n            </div>\n            {otpsends ? (\n              <>\n                {verifyotp ? (\n                  <ResetPass  emailId = {emailId} />\n                ) : (\n                  <div style={{ display: \"flex\", flexDirection: \"column\" }} id=\"otpbox\">\n                    <input\n                      type=\"number\"\n                      placeholder=\"Enter otp\"\n                      required\n                      autoComplete=\"off\"\n                      onChange={handleInput}\n                      name=\"otp\"\n                      id=\"enteredotp\"\n                      style={{ marginRight: \"20px\" }}\n                    />\n                    <button className=\"reg_submit\" onClick={() => verifyOtp(document.getElementById(\"enteredotp\").value)}>\n                      Verify OTP\n                    </button>\n                  </div>\n                )}{\" \"}\n              </>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </>\n      </Container>\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n};\nexport default ForgotPass;\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Vote.js",["108","109","110","111","112","113","114","115"],["116"],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Login.js",["117","118"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\CreateQuery.js",["119","120","121","122","123"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\reg.js",["124"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Ahomepage.js",["125","126","127","128","129","130","131","132","133"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\API\\APIProvider.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\nav.js",["134","135"],[],"import \"./nav.css\";\nimport { Link } from \"react-router-dom\";\n\nvar Nav = (props) => {\n  var isAdmin = localStorage.getItem(\"userID\") == 1 ? true : false;\n  var logedin;\n  var firstName;\n  var lastName;\n  var ishomepage = false;\n  props.homepage === undefined ? (ishomepage = false) : (ishomepage = true);\n  props.logedin === undefined ? (logedin = false) : (logedin = true);\n  props.firstName === undefined ? (firstName = \" \") : (firstName = props.firstName);\n  props.lastName === undefined ? (lastName = \" \") : (lastName = props.lastName);\n  var pp = firstName.split(\"\")[0].toUpperCase() + lastName.split(\"\")[0].toUpperCase();\n  return (\n    <nav className=\"navbar-light fluid\">\n      {isAdmin ?\n        <Link to={'/homepage'}><div style={{ display: \"inline-flex\" }} >\n          <div className=\"img-size\">\n          </div>\n          <span className=\" header\">Ballot</span>\n        </div>\n        </Link> :\n        <Link to={'/allframes'}><div style={{ display: \"inline-flex\" }} >\n          <div className=\"img-size\">\n          </div>\n          <span className=\" header\">Ballot</span>\n        </div>\n        </Link>\n      }\n    \n      {logedin ? (\n        <div id=\"imgSpan_wrap\">\n          {/* {ishomepage ? (\n            <Link to={props.homepage[1]} className=\"logoutSpan\">\n              {props.homepage[0]}\n            </Link>\n          ) : (\n            <span></span>\n          )} */}\n          <span id=\"profile_pic\">{pp}</span>\n          <Link to={\"/\"} className=\"logoutSpan\" onClick={() => { localStorage.clear() }}>\n            <span>logout</span>\n          </Link>\n        </div>\n      ) : (\n        <span></span>\n      )}\n    </nav>\n  );\n};\nexport default Nav;\n\n// navbar-expand-lg\n// navbar\n// container\n// navbar-brand\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Upper_part.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\LoadingSpinner.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\UI\\Button.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ResetPass.js",["136","137"],[],"import { red } from \"@mui/material/colors\";\nimport { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport '../Pages/reg.css'\nimport { useNavigate } from \"react-router-dom\";\n//toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const ResetPass = ({emailId}) => {\n  let navigate = useNavigate();\n  console.log(emailId);\n  const [invalid,setInvalid] = useState();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const pass = e.target.password.value\n    const cpass = e.target.cpassword.value\n\n    if(pass == cpass){\n    const requestOptions = {\n      method: \"put\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email: emailId , password: e.target.password.value })\n    }\n\n      const response = await fetch('http://localhost:5000/users/updatepassword', requestOptions)\n        .then((resp) => resp.json())\n        .then((actualData) => {\n          return actualData\n        })\n\n      const respdata = response\n      console.log(respdata); \n      if (respdata.status === 1) {\n        toast.success('Password Updated Successfully..', {\n          position: \"bottom-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n        setTimeout(function() {\n          navigate(\"/\");\n      \n      }, 500)\n      }\n      else {\n        toast.error('Unable to update Password', {\n          position: \"bottom-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n        setInvalid('invalid')\n      }\n    }\n    else\n        setInvalid('invalid')\n\n  }\n\n  return (\n    \n    <div>\n    <form action=\"#\" onSubmit={onSubmit}>\n        <input type=\"text\" placeholder=\"Password\" required autoComplete=\"off\"  name=\"password\" className={invalid} />\n        <input type=\"password\" placeholder=\"Confirm Password\" required autoComplete=\"off\" name=\"cpassword\"  className={invalid}/>\n        <p style={{color:\"red\",fontSize:\"20px\",display:`${invalid ? \"block\" : \"none\"}`}}>something goes wrong</p>\n        <Button text=\"Update Password\">Update Password</Button>\n    </form>\n    <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  )\n}\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Frame.js",["138","139","140","141","142","143","144","145"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Pagination.js",["146"],[],"// import ReactDOM from 'react-dom'\r\n// import ReactPaginate from 'react-paginate';\r\n// import { useState , useEffect } from 'react';\r\n// import Ahomepage from './Ahomepage';\r\n\r\n\r\n// function PaginatedItems({ itemsPerPage }) {\r\n//     // We start with an empty list of items.\r\n//     const [currentItems, setCurrentItems] = useState(null);\r\n//     const [pageCount, setPageCount] = useState(0);\r\n//     // Here we use item offsets; we could also use page offsets\r\n//     // following the API or data you're working with.\r\n//     const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n//     useEffect(() => {\r\n//       // Fetch items from another resources.\r\n//       const endOffset = itemOffset + itemsPerPage;\r\n//       console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n//       setCurrentItems(frame.slice(itemOffset, endOffset));\r\n//       setPageCount(Math.ceil(frame.length / itemsPerPage));\r\n//     }, [itemOffset, itemsPerPage]);\r\n  \r\n//     // Invoke when user click to request another page.\r\n//     const handlePageClick = (event) => {\r\n//       const newOffset = (event.selected * itemsPerPage) % frame.length;\r\n//       console.log(\r\n//         `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n//       );\r\n//       setItemOffset(newOffset);\r\n//     };\r\n  \r\n//     return (\r\n//       <>\r\n//         <Ahomepage currentItems={currentItems} />\r\n//         <ReactPaginate\r\n//           breakLabel=\"...\"\r\n//           nextLabel=\"next >\"\r\n//           onPageChange={handlePageClick}\r\n//           pageRangeDisplayed={5}\r\n//           pageCount={pageCount}\r\n//           previousLabel=\"< previous\"\r\n//           renderOnZeroPageCount={null}\r\n//         />\r\n//       </>\r\n//     );\r\n//   }\r\n  \r\n//   // Add a <div id=\"container\"> to your HTML to see the componend rendered.\r\n//   ReactDOM.render(\r\n//     <PaginatedItems itemsPerPage={4} />,\r\n//     document.getElementById('container')\r\n//   );\r\n\r\nimport React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  \r\n    \r\n  \r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n//   const [itemOffset, setItemOffset] = useState(0);\r\n//   const handlePageClick = (event) => {\r\n//           const newOffset = (event.selected * postsPerPage) % totalPosts;\r\n//           console.log(\r\n//             `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n//           );\r\n//           paginate(newOffset);\r\n//         };\r\nconst selected = (e) =>{\r\n}\r\n  return (\r\n    // <ReactPaginate\r\n    //           breakLabel=\"...\"\r\n    //           nextLabel=\"next >\"\r\n    //           onPageChange={handlePageClick}\r\n    //           pageRangeDisplayed={postsPerPage}\r\n    //           pageCount={totalPosts/postsPerPage}\r\n    //           previousLabel=\"< previous\"\r\n    //           renderOnZeroPageCount={null}\r\n    //         />\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)} \r\n            style={{cursor:\"pointer\",fontSize:\"25px\",paddingTop:\"3px\",paddingRight:\"10px\",paddingLeft:\"10px\"}} \r\n            className='page-link'\r\n            onSelect={selected}\r\n            >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Overlay.js",[],[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":3,"column":25,"nodeType":"153","messageId":"154","endLine":3,"endColumn":33},{"ruleId":"151","severity":1,"message":"155","line":30,"column":10,"nodeType":"153","messageId":"154","endLine":30,"endColumn":17},{"ruleId":"151","severity":1,"message":"156","line":30,"column":19,"nodeType":"153","messageId":"154","endLine":30,"endColumn":29},{"ruleId":"151","severity":1,"message":"157","line":32,"column":7,"nodeType":"153","messageId":"154","endLine":32,"endColumn":12},{"ruleId":"151","severity":1,"message":"158","line":34,"column":10,"nodeType":"153","messageId":"154","endLine":34,"endColumn":18},{"ruleId":"151","severity":1,"message":"159","line":34,"column":20,"nodeType":"153","messageId":"154","endLine":34,"endColumn":31},{"ruleId":"151","severity":1,"message":"160","line":36,"column":9,"nodeType":"153","messageId":"154","endLine":36,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":37,"column":22,"nodeType":"163","messageId":"164","endLine":37,"endColumn":24},{"ruleId":"151","severity":1,"message":"165","line":50,"column":9,"nodeType":"153","messageId":"154","endLine":50,"endColumn":20},{"ruleId":"151","severity":1,"message":"166","line":69,"column":13,"nodeType":"153","messageId":"154","endLine":69,"endColumn":31},{"ruleId":"151","severity":1,"message":"167","line":78,"column":17,"nodeType":"153","messageId":"154","endLine":78,"endColumn":20},{"ruleId":"151","severity":1,"message":"168","line":81,"column":19,"nodeType":"153","messageId":"154","endLine":81,"endColumn":34},{"ruleId":"169","severity":1,"message":"170","line":85,"column":13,"nodeType":"171","messageId":"172","endLine":85,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":21,"column":42,"nodeType":"171","messageId":"172","endLine":21,"endColumn":44},{"ruleId":"173","severity":1,"message":"174","line":31,"column":6,"nodeType":"175","endLine":31,"endColumn":9,"suggestions":"176"},{"ruleId":"173","severity":1,"message":"177","line":31,"column":7,"nodeType":"178","endLine":31,"endColumn":8},{"ruleId":"151","severity":1,"message":"179","line":38,"column":24,"nodeType":"153","messageId":"154","endLine":38,"endColumn":39},{"ruleId":"161","severity":1,"message":"162","line":86,"column":33,"nodeType":"163","messageId":"164","endLine":86,"endColumn":35},{"ruleId":"169","severity":1,"message":"170","line":88,"column":24,"nodeType":"171","messageId":"172","endLine":88,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":113,"column":110,"nodeType":"171","messageId":"172","endLine":113,"endColumn":112},{"ruleId":"161","severity":1,"message":"180","line":154,"column":54,"nodeType":"163","messageId":"181","endLine":154,"endColumn":56},{"ruleId":"182","severity":2,"message":"183","line":88,"column":9,"nodeType":"184","messageId":"185","endLine":88,"endColumn":56,"suppressions":"186"},{"ruleId":"151","severity":1,"message":"187","line":17,"column":10,"nodeType":"153","messageId":"154","endLine":17,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":65,"column":23,"nodeType":"171","messageId":"172","endLine":65,"endColumn":25},{"ruleId":"151","severity":1,"message":"188","line":12,"column":8,"nodeType":"153","messageId":"154","endLine":12,"endColumn":14},{"ruleId":"151","severity":1,"message":"189","line":21,"column":10,"nodeType":"153","messageId":"154","endLine":21,"endColumn":15},{"ruleId":"151","severity":1,"message":"190","line":21,"column":17,"nodeType":"153","messageId":"154","endLine":21,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":99,"column":35,"nodeType":"163","messageId":"164","endLine":99,"endColumn":37},{"ruleId":"151","severity":1,"message":"191","line":114,"column":9,"nodeType":"153","messageId":"154","endLine":114,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":41,"column":45,"nodeType":"171","messageId":"172","endLine":41,"endColumn":47},{"ruleId":"169","severity":1,"message":"170","line":26,"column":15,"nodeType":"171","messageId":"172","endLine":26,"endColumn":17},{"ruleId":"173","severity":1,"message":"192","line":33,"column":6,"nodeType":"175","endLine":33,"endColumn":8,"suggestions":"193"},{"ruleId":"151","severity":1,"message":"194","line":68,"column":7,"nodeType":"153","messageId":"154","endLine":68,"endColumn":13},{"ruleId":"151","severity":1,"message":"195","line":70,"column":15,"nodeType":"153","messageId":"154","endLine":70,"endColumn":25},{"ruleId":"161","severity":1,"message":"196","line":128,"column":32,"nodeType":"163","messageId":"181","endLine":128,"endColumn":34},{"ruleId":"169","severity":1,"message":"197","line":128,"column":47,"nodeType":"171","messageId":"172","endLine":128,"endColumn":49},{"ruleId":"161","severity":1,"message":"196","line":129,"column":34,"nodeType":"163","messageId":"181","endLine":129,"endColumn":36},{"ruleId":"169","severity":1,"message":"197","line":129,"column":49,"nodeType":"171","messageId":"172","endLine":129,"endColumn":51},{"ruleId":"169","severity":1,"message":"197","line":225,"column":50,"nodeType":"171","messageId":"172","endLine":225,"endColumn":52},{"ruleId":"169","severity":1,"message":"170","line":5,"column":48,"nodeType":"171","messageId":"172","endLine":5,"endColumn":50},{"ruleId":"151","severity":1,"message":"198","line":10,"column":58,"nodeType":"153","messageId":"154","endLine":10,"endColumn":68},{"ruleId":"151","severity":1,"message":"199","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":20,"column":13,"nodeType":"171","messageId":"172","endLine":20,"endColumn":15},{"ruleId":"151","severity":1,"message":"200","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":38,"column":16,"nodeType":"171","messageId":"172","endLine":38,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":38,"column":30,"nodeType":"171","messageId":"172","endLine":38,"endColumn":32},{"ruleId":"169","severity":1,"message":"170","line":38,"column":46,"nodeType":"171","messageId":"172","endLine":38,"endColumn":48},{"ruleId":"169","severity":1,"message":"170","line":38,"column":62,"nodeType":"171","messageId":"172","endLine":38,"endColumn":64},{"ruleId":"201","severity":1,"message":"202","line":54,"column":123,"nodeType":"203","messageId":"172","endLine":54,"endColumn":132},{"ruleId":"201","severity":1,"message":"204","line":54,"column":143,"nodeType":"203","messageId":"172","endLine":54,"endColumn":152},{"ruleId":"169","severity":1,"message":"197","line":66,"column":30,"nodeType":"171","messageId":"172","endLine":66,"endColumn":32},{"ruleId":"205","severity":1,"message":"206","line":89,"column":13,"nodeType":"207","endLine":93,"endColumn":14},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'optdata' is assigned a value but never used.","'setoptdata' is assigned a value but never used.","'votes' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'addinballot' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getallQuery' is assigned a value but never used.","'singlequeryoptions' is assigned a value but never used.","'opt' is assigned a value but never used.","'voteaddedoption' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getallQuery' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["210"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'setPostsPerPage' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["211"],"'logindata' is assigned a value but never used.","'styled' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'homepage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllQuery' and 'navigate'. Either include them or remove the dependency array.",["212"],"'option' is assigned a value but never used.","'optionName' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","Expected '!==' and instead saw '!='.","'ishomepage' is assigned a value but never used.","'red' is defined but never used.","'Container' is defined but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","Duplicate key 'marginTop'.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"kind":"215","justification":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [getallQuery, navigate]",{"range":"219","text":"220"},"directive","","Update the dependencies array to be: [getAllQuery, navigate]",{"range":"221","text":"222"},[877,880],"[getallQuery, navigate]",[1056,1058],"[getAllQuery, navigate]"]
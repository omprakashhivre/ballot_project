[{"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\index.js":"1","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\App.js":"2","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ForgotPass.js":"3","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Vote.js":"4","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Login.js":"5","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\CreateQuery.js":"6","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\reg.js":"7","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Ahomepage.js":"8","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\API\\APIProvider.js":"9","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\nav.js":"10","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Upper_part.js":"11","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\LoadingSpinner.js":"12","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\UI\\Button.js":"13","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ResetPass.js":"14","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Frame.js":"15","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Pagination.js":"16","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Overlay.js":"17"},{"size":266,"mtime":1653383563018,"results":"18","hashOfConfig":"19"},{"size":3574,"mtime":1654053547054,"results":"20","hashOfConfig":"19"},{"size":5382,"mtime":1654454171128,"results":"21","hashOfConfig":"19"},{"size":5195,"mtime":1654500787352,"results":"22","hashOfConfig":"19"},{"size":3205,"mtime":1654161525497,"results":"23","hashOfConfig":"19"},{"size":4077,"mtime":1654450182351,"results":"24","hashOfConfig":"19"},{"size":4173,"mtime":1654451021585,"results":"25","hashOfConfig":"19"},{"size":11452,"mtime":1654505665208,"results":"26","hashOfConfig":"19"},{"size":2351,"mtime":1654052756314,"results":"27","hashOfConfig":"19"},{"size":1729,"mtime":1654444013660,"results":"28","hashOfConfig":"19"},{"size":1228,"mtime":1653384574546,"results":"29","hashOfConfig":"19"},{"size":216,"mtime":1653384532652,"results":"30","hashOfConfig":"19"},{"size":374,"mtime":1653384151238,"results":"31","hashOfConfig":"19"},{"size":2633,"mtime":1654454301208,"results":"32","hashOfConfig":"19"},{"size":4190,"mtime":1654500739510,"results":"33","hashOfConfig":"19"},{"size":3468,"mtime":1654074806191,"results":"34","hashOfConfig":"19"},{"size":737,"mtime":1654505036351,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"yb96t1",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"39"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\index.js",[],[],["93","94"],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\App.js",["95","96","97","98","99","100","101","102","103","104","105","106"],[],"import \"./App.css\";\nimport Reg from \"./Pages/reg\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Login from \"./Pages/Login\";\nimport Ahomepage from \"./Pages/Ahomepage\";\nimport CreateQuery from \"./Pages/CreateQuery\";\nimport Vote from \"./Components/Vote\";\nimport ForgotPass from \"./Components/ForgotPass\";\n// import { APIProvider } from \"./API/APIProvider\";\nimport { useEffect } from \"react\";\n\n// rafce\n\n\nfunction App() {\n  useEffect(() => {\n    // getallQuery()\n  }, [])\n  // useEffect(() => {\n  //   const email = localStorage.getItem(\"emailId\")\n  //   const pass = localStorage.getItem(\"password\")\n  //   if (email && pass) {\n  //     console.log(email+\" \"+pass);\n  //   }\n  //   else {\n  //     Navigate(\"/\")\n  //   }\n  // })\n  const [optdata, setoptdata] = useState([])\n  const [checkmate, setcheckmate] = useState(false)\n  var votes = [];\n  const [ballot, setBallot] = useState([])\n  const [loggedIn, setLoggedIn] = useState({ emailId: \"\" })\n\n  const addinballot = (q) => {\n    ballot.map((bal) => {\n      if (bal.id === q.id) {\n        setcheckmate(true)\n      }\n    })\n\n    if (!checkmate) {\n      setcheckmate(false)\n      setBallot([...ballot, q])\n      console.log(ballot);\n    }\n  }\n\n  const getallQuery = async () => {\n    var array = [];\n\n    console.log(\"getAllQuery called\");\n    var allQuery = await fetch(\"http://localhost:5000/query/getAllquery\")\n      .then((resp) => resp.json())\n      .then((actualData) => {\n        return actualData\n      })\n\n    const respQueries = allQuery.data;\n\n\n    await respQueries.map(async (singleQuery) => {\n      var q;\n\n      const query = singleQuery.queryName\n      const id = singleQuery.queryId\n      q = { \"id\": id, \"query\": query }\n      const singlequeryoptions = await fetch(\"http://localhost:5000/options/getalloptions\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ queryId: id })\n\n      })\n        .then((resp) => resp.json())\n        .then(async (actualData) => {\n          let alloptions = []\n          const opt = await actualData.data.map(async (singleoption) => {\n            let firstOption = { \"optionId\": singleoption.optionId, \"optionName\": singleoption.options }\n\n            const voteaddedoption = await fetch(\"http://localhost:5000/users/voteforsingleoption\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ optionId: singleoption.optionId })\n            }).then((resp1) => resp1.json())\n              .then((optiondata) => {\n                firstOption = { ...firstOption, \"totalvote\": optiondata.data[0].voteforsingleoption }\n              })\n            alloptions.push(firstOption)\n            return firstOption\n          })\n          q = { ...q, \"options\": alloptions, \"isUserVoted\": false }\n          array.push(q)\n          return actualData\n        })\n\n      return 1;\n    })\n    console.log(array);\n    setBallot(array)\n    console.log(ballot);\n\n  }\n\n  \n  return (\n    <div className=\"background\">\n      {/* <APIProvider> */}\n        <Routes>\n          <Route path=\"/reg\" exact element={<Reg />} />\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/homepage\" element={<Ahomepage />} />\n          <Route path=\"/createquery\" element={<CreateQuery />} />\n          <Route path=\"/forgotpass\" element={<ForgotPass />} />\n          <Route path=\"/allframes\" element={<Vote />} />\n        </Routes>\n      {/* </APIProvider> */}\n    </div>\n  );\n\n}\n\nexport default App;\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ForgotPass.js",["107"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Vote.js",["108","109","110","111","112","113","114"],["115"],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Login.js",["116","117"],[],"import \"./reg.css\";\nimport Button from \"../UI/Button\";\nimport Nav from \"../Components/nav\";\nimport Upperpart from \"../Components/Upper_part\";\nimport Container from \"@mui/material/Container\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nvar Login = () => {\n\n  const [inputClass, setInputClass] = useState()\n  const [userreg, updateuserreg] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [logindata, setlogindata] = useState({})\n\n\n  const handleInput = (e) => {\n    //checking of imput is here to pe written\n    const name = e.target.name;\n    const value = e.target.value;\n    updateuserreg({ ...userreg, [name]: value });\n  };\n  let navigate = useNavigate();\n  function req() {\n    navigate(\"/homepage\");\n  }\n\n  const onsubmit = async (e) => {\n    e.preventDefault();\n    //validation part is here to be written\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email: e.target.email.value, password: e.target.password.value })\n    }\n\n\n    const response = await fetch('http://localhost:5000/users/login', requestOptions)\n      .then((resp) => resp.json())\n      .then((actualData) => {\n        return actualData\n      })\n\n    console.log(response);\n    const respdata = response.data\n    \n\n\n\n\n    if (response.status === 1) {\n      // const user = {userID : respdata.id , email: respdata.email,\n      //   firstName : respdata.firstname , lastName: respdata.lastname}\n      // console.log(user);\n      localStorage.setItem(\"userID\" , respdata.id);\n      localStorage.setItem(\"firstname\" , respdata.firstname);\n      localStorage.setItem(\"lastname\" , respdata.lastname);\n    \n      \n      setlogindata(respdata)\n      console.log(respdata);\n      if (respdata.id == 1)\n        req();\n      else\n        navigate(\"/allframes\");\n    }\n    else {\n      setlogindata(respdata)\n      setInputClass(\"invalid\")\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <Nav />\n      <Container className=\"reg lgin\">\n        <Upperpart top_heading=\"Welcome! Again\" heading=\"Login\" bottom_heading=\"New here?\" link=\"Register account\" href=\"/reg\" />\n        <form action=\"#\" onSubmit={onsubmit}>\n          <div className=\"email-to-password\" id=\"login_input\">\n            <input type=\"email\" placeholder=\"Email\" required autoComplete=\"off\" value={userreg.email} onChange={handleInput} name=\"email\" className={inputClass} />\n\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              autoComplete=\"off\"\n              value={userreg.password}\n              onChange={handleInput}\n              name=\"password\"\n              className={inputClass}\n            />\n            <p style={{ color: \"red\", fontSize: \"20px\", display: `${inputClass ? \"block\" : \"none\"}` }} >invalid credentials</p>\n            <Link to=\"/forgotpass\" id=\"link\" sx={{ color: \"#0029FE\", textDecoration: \"none\", fontSize: \"1.5rem\" }}>\n              Forget Password?\n            </Link>\n          </div>\n          <Button text=\"LogIn\" display=\"none\" />\n        </form>\n      </Container>\n    </>\n  );\n};\nexport default Login;\n","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\CreateQuery.js",["118","119","120","121","122","123"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\reg.js",["124"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Ahomepage.js",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\API\\APIProvider.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\nav.js",["140","141"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Upper_part.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\LoadingSpinner.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\UI\\Button.js",[],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\ResetPass.js",["142","143"],[],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Components\\Frame.js",["144","145","146","147","148","149","150","151","152"],[],"import \"./framestyle.css\";\nimport \"../Pages/Ahomepage.css\";\nimport Container from \"@mui/material/Container\";\nimport { useState } from 'react'\nexport const Frame = ({ vote, setVote, index }) => {\n  console.log(vote);\n  const [timer, setTimer] = useState('')\n  const [frameExpired, setFrameExpired] = useState(false)\n\n\n  const options = vote.option\n  var sum = 0\n  options.map((op) => sum = sum + parseInt(op.totalvote))\n\n\n  const enddate = new Date(vote.endDate);\n\n  if (!vote.isUserVoted)\n    setInterval(() => {\n      const currentDate = new Date();\n      var delta = Math.abs(enddate - currentDate) / 1000;\n\n      // calculate (and subtract) whole days\n      var days = Math.floor(delta / 86400);\n      delta -= days * 86400;\n\n      // calculate (and subtract) whole hours\n      var hours = Math.floor(delta / 3600) % 24;\n      delta -= hours * 3600;\n\n      // calculate (and subtract) whole minutes\n      var minutes = Math.floor(delta / 60) % 60;\n      delta -= minutes * 60;\n\n      // what's left is seconds\n      var seconds = (delta % 60).toFixed(0);\n\n      setTimer(days + \"D \" + hours + \"H \" + minutes + \"M \" + seconds)\n      if (days == 0 && hours == 0 && minutes == 0 && seconds == 0) {\n        setFrameExpired(true)\n      }\n    }, 1000)\n\n  if (frameExpired) {\n    return (\n      <></>\n    )\n  }\n  else {\n    return (\n      <div className={\"inner_form\"} key={vote.id} style={{borderRadius:\"10px\"}}>\n        <h3>{index + 1}) {vote.query}</h3>\n        {\n          vote.isUserVoted ? \"\" :\n            <h4 style={{ color: \"red\", textAlign: \"center\", marginTop: \"5rem\", fontFamily: \"Poppins\", fontWeight: \"bold\", textAlign: \"right\", marginTop: \"0%\" }}>Time left : {\"xx\"}</h4>\n        }\n        <div style={{ borderRadius: \"10px\", padding: \"10px\", backgroundColor: \"#d5d6f2\" }}>\n\n\n          {vote.option.map((curr, index) => {\n            return (\n              <div key={curr.optionId} style={{ backgroundColor: \"#d5d6f2\", padding: \"2px\", marginTop: \"2px\" }}>\n                <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"\", padding: \"0%\" }}>\n                  {vote.isUserVoted ? (\n                    <>\n                      <h5 className=\"frame-query\" style={{ fontSize: \"24px\", marginRight: \"40px\" }}>\n                        {sum != 0 ? ((curr.totalvote / sum) * 100).toFixed(0) : 0}%\n                      </h5>\n                    </>\n                  ) : (\n                    <input type=\"radio\" name=\"inputoption\" value={curr.optionId} style={{ color: \"blue\", width: \"30px\", height: \"50px\", marginRight: \"30px\" }} />\n                  )}\n\n                  <h4 className=\"frame-query\" style={{ fontSize: \"32px\" }}>\n                    {curr.optionName.trim()}{\" \"}\n                  </h4>\n                  <br></br>\n                </div>\n                {\n                  vote.isUserVoted ?\n                    <div className=\"progress p_inline_bar\">\n                      <div\n                        className=\"progress-bar inline-progress-bar\"\n                        role=\"progressbar\"\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                        style={{ width: ((Math.ceil(curr.totalvote / sum)) * 100) + \"%\" }}\n                      ></div>\n                    </div> : ''\n                }\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"bottom_form\">\n          <div className=\"usersPic_voteCount\">\n            Total vote: {sum}\n          </div>\n          {\n            vote.isUserVoted ? ' ' :\n              <>\n                {/* <p style={{display:\"inline-grid\",color:\"red\",fontSize:\"20px\"}}> query end on :  {vote.endDate}</p> */}\n                <button className=\"button-btn \" style={{ float: \"right\", marginLeft: \"30%\" }} onClick={() => {\n                  try {\n                    const choosedoption = document.querySelector('input[name=\"inputoption\"]:checked').value\n                    setVote(vote.id, choosedoption)\n                  } catch (error) {\n                    console.log(error)\n                  }\n\n                }\n                }>Vote</button>\n              </>\n          }\n        </div>\n      </div>\n    );\n\n  }\n\n\n};\n",["153","154"],"C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Pagination.js",["155"],[],"// import ReactDOM from 'react-dom'\r\n// import ReactPaginate from 'react-paginate';\r\n// import { useState , useEffect } from 'react';\r\n// import Ahomepage from './Ahomepage';\r\n\r\n\r\n// function PaginatedItems({ itemsPerPage }) {\r\n//     // We start with an empty list of items.\r\n//     const [currentItems, setCurrentItems] = useState(null);\r\n//     const [pageCount, setPageCount] = useState(0);\r\n//     // Here we use item offsets; we could also use page offsets\r\n//     // following the API or data you're working with.\r\n//     const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n//     useEffect(() => {\r\n//       // Fetch items from another resources.\r\n//       const endOffset = itemOffset + itemsPerPage;\r\n//       console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n//       setCurrentItems(frame.slice(itemOffset, endOffset));\r\n//       setPageCount(Math.ceil(frame.length / itemsPerPage));\r\n//     }, [itemOffset, itemsPerPage]);\r\n  \r\n//     // Invoke when user click to request another page.\r\n//     const handlePageClick = (event) => {\r\n//       const newOffset = (event.selected * itemsPerPage) % frame.length;\r\n//       console.log(\r\n//         `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n//       );\r\n//       setItemOffset(newOffset);\r\n//     };\r\n  \r\n//     return (\r\n//       <>\r\n//         <Ahomepage currentItems={currentItems} />\r\n//         <ReactPaginate\r\n//           breakLabel=\"...\"\r\n//           nextLabel=\"next >\"\r\n//           onPageChange={handlePageClick}\r\n//           pageRangeDisplayed={5}\r\n//           pageCount={pageCount}\r\n//           previousLabel=\"< previous\"\r\n//           renderOnZeroPageCount={null}\r\n//         />\r\n//       </>\r\n//     );\r\n//   }\r\n  \r\n//   // Add a <div id=\"container\"> to your HTML to see the componend rendered.\r\n//   ReactDOM.render(\r\n//     <PaginatedItems itemsPerPage={4} />,\r\n//     document.getElementById('container')\r\n//   );\r\n\r\nimport React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  \r\n    \r\n  \r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n//   const [itemOffset, setItemOffset] = useState(0);\r\n//   const handlePageClick = (event) => {\r\n//           const newOffset = (event.selected * postsPerPage) % totalPosts;\r\n//           console.log(\r\n//             `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n//           );\r\n//           paginate(newOffset);\r\n//         };\r\nconst selected = (e) =>{\r\n}\r\n  return (\r\n    // <ReactPaginate\r\n    //           breakLabel=\"...\"\r\n    //           nextLabel=\"next >\"\r\n    //           onPageChange={handlePageClick}\r\n    //           pageRangeDisplayed={postsPerPage}\r\n    //           pageCount={totalPosts/postsPerPage}\r\n    //           previousLabel=\"< previous\"\r\n    //           renderOnZeroPageCount={null}\r\n    //         />\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)} \r\n            style={{cursor:\"pointer\",fontSize:\"25px\",paddingTop:\"3px\",paddingRight:\"10px\",paddingLeft:\"10px\"}} \r\n            className='page-link'\r\n            onSelect={selected}\r\n            >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","C:\\Users\\omG\\OneDrive\\Documents\\GitHub\\ballot_project\\front_end\\src\\Pages\\Overlay.js",[],[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":25,"nodeType":"162","messageId":"163","endLine":3,"endColumn":33},{"ruleId":"160","severity":1,"message":"164","line":30,"column":10,"nodeType":"162","messageId":"163","endLine":30,"endColumn":17},{"ruleId":"160","severity":1,"message":"165","line":30,"column":19,"nodeType":"162","messageId":"163","endLine":30,"endColumn":29},{"ruleId":"160","severity":1,"message":"166","line":32,"column":7,"nodeType":"162","messageId":"163","endLine":32,"endColumn":12},{"ruleId":"160","severity":1,"message":"167","line":34,"column":10,"nodeType":"162","messageId":"163","endLine":34,"endColumn":18},{"ruleId":"160","severity":1,"message":"168","line":34,"column":20,"nodeType":"162","messageId":"163","endLine":34,"endColumn":31},{"ruleId":"160","severity":1,"message":"169","line":36,"column":9,"nodeType":"162","messageId":"163","endLine":36,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":37,"column":22,"nodeType":"172","messageId":"173","endLine":37,"endColumn":24},{"ruleId":"160","severity":1,"message":"174","line":50,"column":9,"nodeType":"162","messageId":"163","endLine":50,"endColumn":20},{"ruleId":"160","severity":1,"message":"175","line":69,"column":13,"nodeType":"162","messageId":"163","endLine":69,"endColumn":31},{"ruleId":"160","severity":1,"message":"176","line":78,"column":17,"nodeType":"162","messageId":"163","endLine":78,"endColumn":20},{"ruleId":"160","severity":1,"message":"177","line":81,"column":19,"nodeType":"162","messageId":"163","endLine":81,"endColumn":34},{"ruleId":"178","severity":1,"message":"179","line":85,"column":13,"nodeType":"180","messageId":"181","endLine":85,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":20,"column":42,"nodeType":"180","messageId":"181","endLine":20,"endColumn":44},{"ruleId":"182","severity":1,"message":"183","line":30,"column":6,"nodeType":"184","endLine":30,"endColumn":9,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"186","line":30,"column":7,"nodeType":"187","endLine":30,"endColumn":8},{"ruleId":"170","severity":1,"message":"171","line":86,"column":33,"nodeType":"172","messageId":"173","endLine":86,"endColumn":35},{"ruleId":"178","severity":1,"message":"179","line":88,"column":24,"nodeType":"180","messageId":"181","endLine":88,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":112,"column":110,"nodeType":"180","messageId":"181","endLine":112,"endColumn":112},{"ruleId":"170","severity":1,"message":"188","line":147,"column":47,"nodeType":"172","messageId":"189","endLine":147,"endColumn":49},{"ruleId":"190","severity":2,"message":"191","line":88,"column":9,"nodeType":"192","messageId":"193","endLine":88,"endColumn":56,"suppressions":"194"},{"ruleId":"160","severity":1,"message":"195","line":17,"column":10,"nodeType":"162","messageId":"163","endLine":17,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":65,"column":23,"nodeType":"180","messageId":"181","endLine":65,"endColumn":25},{"ruleId":"160","severity":1,"message":"196","line":10,"column":10,"nodeType":"162","messageId":"163","endLine":10,"endColumn":24},{"ruleId":"160","severity":1,"message":"197","line":19,"column":10,"nodeType":"162","messageId":"163","endLine":19,"endColumn":15},{"ruleId":"160","severity":1,"message":"198","line":19,"column":17,"nodeType":"162","messageId":"163","endLine":19,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":38,"column":9,"nodeType":"192","messageId":"201","endLine":46,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":84,"column":35,"nodeType":"172","messageId":"173","endLine":84,"endColumn":37},{"ruleId":"160","severity":1,"message":"202","line":99,"column":9,"nodeType":"162","messageId":"163","endLine":99,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":37,"column":45,"nodeType":"180","messageId":"181","endLine":37,"endColumn":47},{"ruleId":"160","severity":1,"message":"203","line":16,"column":10,"nodeType":"162","messageId":"163","endLine":16,"endColumn":17},{"ruleId":"160","severity":1,"message":"204","line":17,"column":10,"nodeType":"162","messageId":"163","endLine":17,"endColumn":15},{"ruleId":"160","severity":1,"message":"205","line":19,"column":10,"nodeType":"162","messageId":"163","endLine":19,"endColumn":24},{"ruleId":"160","severity":1,"message":"206","line":19,"column":26,"nodeType":"162","messageId":"163","endLine":19,"endColumn":33},{"ruleId":"178","severity":1,"message":"179","line":32,"column":15,"nodeType":"180","messageId":"181","endLine":32,"endColumn":17},{"ruleId":"182","severity":1,"message":"207","line":39,"column":6,"nodeType":"184","endLine":39,"endColumn":8,"suggestions":"208"},{"ruleId":"160","severity":1,"message":"209","line":44,"column":10,"nodeType":"162","messageId":"163","endLine":44,"endColumn":18},{"ruleId":"160","severity":1,"message":"210","line":44,"column":20,"nodeType":"162","messageId":"163","endLine":44,"endColumn":31},{"ruleId":"160","severity":1,"message":"211","line":75,"column":7,"nodeType":"162","messageId":"163","endLine":75,"endColumn":13},{"ruleId":"160","severity":1,"message":"212","line":77,"column":15,"nodeType":"162","messageId":"163","endLine":77,"endColumn":25},{"ruleId":"170","severity":1,"message":"213","line":135,"column":32,"nodeType":"172","messageId":"189","endLine":135,"endColumn":34},{"ruleId":"178","severity":1,"message":"214","line":135,"column":47,"nodeType":"180","messageId":"181","endLine":135,"endColumn":49},{"ruleId":"170","severity":1,"message":"213","line":136,"column":34,"nodeType":"172","messageId":"189","endLine":136,"endColumn":36},{"ruleId":"178","severity":1,"message":"214","line":136,"column":49,"nodeType":"180","messageId":"181","endLine":136,"endColumn":51},{"ruleId":"178","severity":1,"message":"214","line":239,"column":50,"nodeType":"180","messageId":"181","endLine":239,"endColumn":52},{"ruleId":"178","severity":1,"message":"179","line":5,"column":48,"nodeType":"180","messageId":"181","endLine":5,"endColumn":50},{"ruleId":"160","severity":1,"message":"215","line":10,"column":58,"nodeType":"162","messageId":"163","endLine":10,"endColumn":68},{"ruleId":"160","severity":1,"message":"216","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":20,"column":13,"nodeType":"180","messageId":"181","endLine":20,"endColumn":15},{"ruleId":"160","severity":1,"message":"217","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":17},{"ruleId":"160","severity":1,"message":"218","line":7,"column":10,"nodeType":"162","messageId":"163","endLine":7,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":39,"column":16,"nodeType":"180","messageId":"181","endLine":39,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":39,"column":30,"nodeType":"180","messageId":"181","endLine":39,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":39,"column":46,"nodeType":"180","messageId":"181","endLine":39,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":39,"column":62,"nodeType":"180","messageId":"181","endLine":39,"endColumn":64},{"ruleId":"219","severity":1,"message":"220","line":55,"column":123,"nodeType":"221","messageId":"181","endLine":55,"endColumn":132},{"ruleId":"219","severity":1,"message":"222","line":55,"column":143,"nodeType":"221","messageId":"181","endLine":55,"endColumn":152},{"ruleId":"178","severity":1,"message":"214","line":67,"column":30,"nodeType":"180","messageId":"181","endLine":67,"endColumn":32},{"ruleId":"156","replacedBy":"223"},{"ruleId":"158","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":89,"column":13,"nodeType":"227","endLine":93,"endColumn":14},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'optdata' is assigned a value but never used.","'setoptdata' is assigned a value but never used.","'votes' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'addinballot' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getallQuery' is assigned a value but never used.","'singlequeryoptions' is assigned a value but never used.","'opt' is assigned a value but never used.","'voteaddedoption' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getallQuery' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["230"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["231"],"'logindata' is assigned a value but never used.","'ToastContainer' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","no-unreachable","Unreachable code.","unreachableCode","'homepage' is assigned a value but never used.","'confirm' is defined but never used.","'style' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllQuery' and 'navigate'. Either include them or remove the dependency array.",["232"],"'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'option' is assigned a value but never used.","'optionName' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","Expected '!==' and instead saw '!='.","'ishomepage' is assigned a value but never used.","'red' is defined but never used.","'Container' is defined but never used.","'timer' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","Duplicate key 'marginTop'.",["228"],["229"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"kind":"235","justification":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [getallQuery, navigate]",{"range":"239","text":"240"},"directive","","Update the dependencies array to be: [getAllQuery, navigate]",{"range":"241","text":"242"},[831,834],"[getallQuery, navigate]",[1280,1282],"[getAllQuery, navigate]"]